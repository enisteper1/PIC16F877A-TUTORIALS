#include <motor_pwm_control.h>
#include "lcd.c"
#FUSES NOWDT                    //No Watch Dog Timer
#FUSES NOPUT                    //No Power Up Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#FUSES NOCPD                    //No EE protection
#FUSES NOWRT                    //Program memory not write protected
#FUSES NOPROTECT                //Code not protected from reading
#FUSES NODEBUG

unsigned int pot_value_new = 128;
unsigned int pot_value_old = 128;

unsigned int but_value_new = 128;
unsigned int but_value_old = 128;

void Start();

void main()
{
   
   setup_timer_2(T2_DIV_BY_4,255,1);
   setup_CCP1(CCP_PWM);
   setup_adc(adc_clock_div_16);
   setup_adc_ports(AN0);
   
   set_tris_a(0x01);
   
   set_tris_b(0xFF);
   output_b(0x00);

   set_tris_c(0x00);
   output_c(0x00);
   
   set_tris_b(0x00);
   output_b(0x00);
   lcd_init();
   
   set_adc_channel(0);
   delay_us(20);
   
   set_pwm1_duty(0);
   
   while(TRUE)
   {
     if(input(pin_b3))
     {
      delay_ms(250);
      Start();
     }
     printf(lcd_putc,"\f\tMotor Control");
     set_pwm1_duty(0);
     output_low(pin_c3);
     output_low(pin_c4);
     delay_ms(20);
   }

}

void Start()
{ 
   pot_value_new = 128;
   pot_value_old = 128;
   
   but_value_new = 128;
   pot_value_old = 128;
   
   output_high(pin_c3);
   output_low(pin_c4);
   set_pwm1_duty(128);
   
   while(TRUE)
   {
      if(input(pin_b3))
      {
         delay_ms(250);
         break;
      }
      
      else if (input(pin_b1))
      {
         delay_us(20);
         if (but_value_new < 230)
               but_value_new  += 25;
         else
            but_value_new = 255;
         
      }
      
      else if (input(pin_b2))
      {
         delay_us(20);
         if (but_value_new > 25)
            but_value_new -= 25;
         else
            but_value_new = 0;
                
      }
      
      pot_value_new = read_adc();
      
      if (pot_value_new != pot_value_old)
      {
         pot_value_old = pot_value_new;
         set_pwm1_duty(pot_value_new);
      }
      
      else if (but_value_new != but_value_old)
      {
         but_value_old = but_value_new;
         set_pwm1_duty(but_value_new);
      }
      printf(lcd_putc,"\fPot Value: %u\nBut Value: %u",pot_value_new, but_value_new);
      delay_ms(100);
      
      
   }

}

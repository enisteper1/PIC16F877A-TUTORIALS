CCS PCM C Compiler, Version 5.015, 5967               19-Nov-20 20:54

               Filename:   C:\Users\enist\OneDrive\Belgeler\CCS C Projects\Start_Pause_Stop\main.lst

               ROM used:   251 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           8 (2%) worst case
               Stack used: 4 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0C5
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
....................  
.................... //////////////////////////////////////////////////////// 
.................... ///////////START-PAUSE-STOP BUTONLU DENEY/////////////// 
.................... //START -> SIRAYLA LED YAKMA 
.................... //PAUSE -> SONSUZ DONGU 
.................... //STOP  -> 3 KERE YAKIP MAINE GERI DONME 
.................... void Blink_Sequential(); // START -> SIRAYLA LED YAK 
.................... void Pause(); // PAUSE_BUTTON -> SONSUZ DONGUYE SOK 
.................... void Stop(); // STOP_BUTTON -> 3 KERE YAK ve Maine don 
.................... void Check_Pause_Stop(); // Check PAUSE_BUTTON AND STOP_BUTTON  
.................... void Close_All_Leds(); // Close all leds  
.................... int8 condition = 1; // Stopa basildiginda led yakmayi durdurmasi icin kosul 
....................  
.................... void main() 
*
00C5:  MOVF   03,W
00C6:  ANDLW  1F
00C7:  MOVWF  03
00C8:  MOVLW  01
00C9:  MOVWF  20
00CA:  BSF    03.5
00CB:  BSF    1F.0
00CC:  BSF    1F.1
00CD:  BSF    1F.2
00CE:  BCF    1F.3
00CF:  MOVLW  07
00D0:  MOVWF  1C
00D1:  BCF    03.7
.................... { 
....................    set_tris_b(0xFF); 
00D2:  MOVLW  FF
00D3:  MOVWF  06
....................    output_b(0x00); 
00D4:  CLRF   06
00D5:  BCF    03.5
00D6:  CLRF   06
....................    set_tris_d(0x00); 
00D7:  MOVLW  00
00D8:  BSF    03.5
00D9:  MOVWF  08
....................    output_d(0x00); 
00DA:  CLRF   08
00DB:  BCF    03.5
00DC:  CLRF   08
....................  
....................    while(TRUE) 
....................    { 
....................       if (input(pin_b1)) // Eger START butonuna basilmissa 
00DD:  BSF    03.5
00DE:  BSF    06.1
00DF:  BCF    03.5
00E0:  BTFSS  06.1
00E1:  GOTO   0EA
....................       { 
....................          delay_us(20); // Hata onlemek icin 20 us delay 
00E2:  MOVLW  20
00E3:  MOVWF  77
00E4:  DECFSZ 77,F
00E5:  GOTO   0E4
00E6:  GOTO   0E7
00E7:  NOP
....................          Blink_Sequential(); // Sirayla ledler yanmaya baslar 
00E8:  GOTO   071
....................       } 
00E9:  GOTO   0F6
....................        
....................       else if (input(pin_b7)) // Eger STOP  butonuna basilmissa 
00EA:  BSF    03.5
00EB:  BSF    06.7
00EC:  BCF    03.5
00ED:  BTFSS  06.7
00EE:  GOTO   0F6
....................       { 
....................          delay_us(20); // Hata onlemek icin 20 us delay 
00EF:  MOVLW  20
00F0:  MOVWF  77
00F1:  DECFSZ 77,F
00F2:  GOTO   0F1
00F3:  GOTO   0F4
00F4:  NOP
....................          Stop(); 
00F5:  CALL   029
....................       } 
....................        
....................       Close_All_Leds(); 
00F6:  CALL   018
....................       condition = 1; 
00F7:  MOVLW  01
00F8:  MOVWF  20
00F9:  GOTO   0DD
....................    } 
....................  
.................... } 
....................  
00FA:  SLEEP
.................... void Blink_Sequential() 
.................... {   
....................    while(TRUE) 
....................    {  // LOW D3 HIGH D0 CHECK BUTTONS 
....................       output_low(pin_d3); 
*
0071:  BSF    03.5
0072:  BCF    08.3
0073:  BCF    03.5
0074:  BCF    08.3
....................       output_high(pin_d0); 
0075:  BSF    03.5
0076:  BCF    08.0
0077:  BCF    03.5
0078:  BSF    08.0
....................       delay_ms(250); 
0079:  MOVLW  FA
007A:  MOVWF  22
007B:  CALL   004
....................       Check_Pause_Stop(); 
007C:  CALL   049
....................       delay_ms(250); 
007D:  MOVLW  FA
007E:  MOVWF  22
007F:  CALL   004
....................       Check_Pause_Stop(); 
0080:  CALL   049
....................       if (condition != 1) 
0081:  DECFSZ 20,W
0082:  GOTO   084
0083:  GOTO   085
....................          break; 
0084:  GOTO   0C2
....................        
....................       // LOW D0 HIGH D1 CHECK BUTTONS 
....................       output_low(pin_d0); 
0085:  BSF    03.5
0086:  BCF    08.0
0087:  BCF    03.5
0088:  BCF    08.0
....................       output_high(pin_d1); 
0089:  BSF    03.5
008A:  BCF    08.1
008B:  BCF    03.5
008C:  BSF    08.1
....................       delay_ms(250); 
008D:  MOVLW  FA
008E:  MOVWF  22
008F:  CALL   004
....................       Check_Pause_Stop(); 
0090:  CALL   049
....................       delay_ms(250); 
0091:  MOVLW  FA
0092:  MOVWF  22
0093:  CALL   004
....................       Check_Pause_Stop(); 
0094:  CALL   049
....................       if (condition != 1) 
0095:  DECFSZ 20,W
0096:  GOTO   098
0097:  GOTO   099
....................          break; 
0098:  GOTO   0C2
....................           
....................       // LOW D1 HIGH D2 CHECK BUTTONS 
....................       output_low(pin_d1); 
0099:  BSF    03.5
009A:  BCF    08.1
009B:  BCF    03.5
009C:  BCF    08.1
....................       output_high(pin_d2); 
009D:  BSF    03.5
009E:  BCF    08.2
009F:  BCF    03.5
00A0:  BSF    08.2
....................       delay_ms(250); 
00A1:  MOVLW  FA
00A2:  MOVWF  22
00A3:  CALL   004
....................       Check_Pause_Stop(); 
00A4:  CALL   049
....................       delay_ms(250); 
00A5:  MOVLW  FA
00A6:  MOVWF  22
00A7:  CALL   004
....................       Check_Pause_Stop(); 
00A8:  CALL   049
....................       if (condition != 1) 
00A9:  DECFSZ 20,W
00AA:  GOTO   0AC
00AB:  GOTO   0AD
....................          break; 
00AC:  GOTO   0C2
....................        
....................       // LOW D2 HIGH D3 CHECK BUTTONS 
....................       output_low(pin_d2); 
00AD:  BSF    03.5
00AE:  BCF    08.2
00AF:  BCF    03.5
00B0:  BCF    08.2
....................       output_high(pin_d3); 
00B1:  BSF    03.5
00B2:  BCF    08.3
00B3:  BCF    03.5
00B4:  BSF    08.3
....................       delay_ms(250); 
00B5:  MOVLW  FA
00B6:  MOVWF  22
00B7:  CALL   004
....................       Check_Pause_Stop(); 
00B8:  CALL   049
....................       delay_ms(250); 
00B9:  MOVLW  FA
00BA:  MOVWF  22
00BB:  CALL   004
....................       Check_Pause_Stop(); 
00BC:  CALL   049
....................       if (condition != 1) 
00BD:  DECFSZ 20,W
00BE:  GOTO   0C0
00BF:  GOTO   0C1
....................          break; 
00C0:  GOTO   0C2
00C1:  GOTO   071
....................    } 
00C2:  BCF    0A.3
00C3:  BCF    0A.4
00C4:  GOTO   0E9 (RETURN)
.................... } 
.................... // Check Pause and Stop button 
.................... void Check_Pause_Stop() 
.................... { 
....................    if (input(pin_b4)) 
*
0049:  BSF    03.5
004A:  BSF    06.4
004B:  BCF    03.5
004C:  BTFSS  06.4
004D:  GOTO   064
....................    { 
....................       delay_us(20); 
004E:  MOVLW  20
004F:  MOVWF  77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  GOTO   053
0053:  NOP
....................       Pause(); 
....................    } 
*
0063:  GOTO   070
....................    else if (input(pin_b7)) 
0064:  BSF    03.5
0065:  BSF    06.7
0066:  BCF    03.5
0067:  BTFSS  06.7
0068:  GOTO   070
....................    {   
....................       delay_us(20); 
0069:  MOVLW  20
006A:  MOVWF  77
006B:  DECFSZ 77,F
006C:  GOTO   06B
006D:  GOTO   06E
006E:  NOP
....................       Stop(); 
006F:  CALL   029
....................    } 
0070:  RETURN
.................... } 
....................  
.................... void Pause() 
.................... { 
....................    while(TRUE) 
....................    { 
....................       if (input(pin_b1)) // Pause sorgula 
*
0054:  BSF    03.5
0055:  BSF    06.1
0056:  BCF    03.5
0057:  BTFSS  06.1
0058:  GOTO   05B
....................          break; 
0059:  GOTO   063
005A:  GOTO   062
....................           
....................       else if (input(pin_b7)) // Stop sorgula 
005B:  BSF    03.5
005C:  BSF    06.7
005D:  BCF    03.5
005E:  BTFSS  06.7
005F:  GOTO   062
....................       { 
....................          Stop(); 
0060:  CALL   029
....................          break; 
0061:  GOTO   063
....................       } 
0062:  GOTO   054
....................        
....................    } 
.................... } 
....................  
....................  
.................... void Stop() 
.................... { 
....................    for(int8 i = 0; i < 3; i++) 
*
0029:  CLRF   21
002A:  MOVF   21,W
002B:  SUBLW  02
002C:  BTFSS  03.0
002D:  GOTO   047
....................    {   
....................       // Tum ledleri yak 
....................       output_high(pin_d0); 
002E:  BSF    03.5
002F:  BCF    08.0
0030:  BCF    03.5
0031:  BSF    08.0
....................       output_high(pin_d1); 
0032:  BSF    03.5
0033:  BCF    08.1
0034:  BCF    03.5
0035:  BSF    08.1
....................       output_high(pin_d2); 
0036:  BSF    03.5
0037:  BCF    08.2
0038:  BCF    03.5
0039:  BSF    08.2
....................       output_high(pin_d3); 
003A:  BSF    03.5
003B:  BCF    08.3
003C:  BCF    03.5
003D:  BSF    08.3
....................        
....................       delay_ms(250); 
003E:  MOVLW  FA
003F:  MOVWF  22
0040:  CALL   004
....................       Close_All_Leds(); 
0041:  CALL   018
....................       delay_ms(250); 
0042:  MOVLW  FA
0043:  MOVWF  22
0044:  CALL   004
0045:  INCF   21,F
0046:  GOTO   02A
....................        
....................        
....................    } 
....................    // Ledlerin yanmasini onlemek icin kosul 
....................    condition = 0;  
0047:  CLRF   20
0048:  RETURN
....................     
.................... } 
....................  
.................... void Close_All_Leds() 
....................  
.................... { 
....................    output_low(pin_d0); 
*
0018:  BSF    03.5
0019:  BCF    08.0
001A:  BCF    03.5
001B:  BCF    08.0
....................    output_low(pin_d1); 
001C:  BSF    03.5
001D:  BCF    08.1
001E:  BCF    03.5
001F:  BCF    08.1
....................    output_low(pin_d2); 
0020:  BSF    03.5
0021:  BCF    08.2
0022:  BCF    03.5
0023:  BCF    08.2
....................    output_low(pin_d3); 
0024:  BSF    03.5
0025:  BCF    08.3
0026:  BCF    03.5
0027:  BCF    08.3
0028:  RETURN
....................  
.................... } 

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT

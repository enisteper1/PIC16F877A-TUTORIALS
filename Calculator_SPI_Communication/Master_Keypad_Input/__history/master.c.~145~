#include <master.h>
#FUSES  NOPUT, NOPROTECT, HS, NOWRT, NOBROWNOUT, NOCPD, NOLVP, NOWDT
//SATIRLAR
#define SATIR_1 pin_d0
#define SATIR_2 pin_d1
#define SATIR_3 pin_d2
#define SATIR_4 pin_d3
//SUTUNLAR
#define SUTUN_1 pin_d4
#define SUTUN_2 pin_d5
#define SUTUN_3 pin_d6
#define SUTUN_4 pin_d7

// Buton Sorgulama Fonksiyonu
void Buton_Sorgula();
// Hesaplama Islemi
void Hesap();
// Komut Gonderme Fonksiyonu
void Komut_Gonder( char );
// Input olarak gelen sayi icin
float inp = 0;
// Output olarak cikacak sayi icin
float out = 0;
char islem = '/';
// Calisip Calismama degiskeni
int start = 0;
// Baslangicta sifir gostermesi icin degisken
int baslangic = 0;


void main()
{
   //Lowdan High a gecerken kesme uygulanacak en yakin 16 oldugu icin onu kullandim
   setup_adc_ports( 0x00 );
   set_adc_channel(0x00);
   setup_spi(SPI_MASTER| SPI_L_TO_H| SPI_CLK_DIV_16);
   delay_ms( 200 );
   //Ilk 4lu output son 4lu input
   set_tris_d(0b11110000);
   output_d(0x00);
  //Low'dan High'a gecerken kesme uygulattim buton icin de
  ext_int_edge(L_TO_H);
  // Kesmeleri aktif hale getirdim
  enable_interrupts( INT_EXT );
  enable_interrupts( GLOBAL );
   
   while(TRUE)
   {  // Calisiyorsa
      if ( start )
      {  
         // Ilk defa ise
         if ( baslangic )
         {
            Komut_Gonder( '0' );
            baslangic  = 0;
         }
         // Tek tek butonlari sorgulattim
         Buton_Sorgula();
      }
      else
         // Durdurma Komutu
         Komut_Gonder( 'A' );
   }
}

void Buton_Sorgula()
{

      //SATIR 1 -> 7, 8, 9, /
      output_high( SATIR_1 );
      if( input( SUTUN_1 ) )// 7
      {
         if( inp == 0 && out == 0)Komut_Gonder( '\f' );
         inp *=10;inp += 7;Komut_Gonder( '7' );delay_ms(250);
      }
      else if( input( SUTUN_2 ) )// 8
      {
         if( inp == 0 && out == 0) Komut_Gonder( '\f' );
         inp *=10;inp += 8;Komut_Gonder( '8' );delay_ms(250);
      }
      else if( input( SUTUN_3 ) )// 9
      {
         if( inp == 0 && out == 0)Komut_Gonder( '\f' );
         inp *=10;inp += 9;Komut_Gonder( '9' );delay_ms(250);
      }
      else if( input( SUTUN_4 ) )// /
      {
         islem = '/';
         if ( out == 0 ){out = inp; inp = 0;}
         Komut_Gonder( '/' );delay_ms(250);
      }
      output_low( SATIR_1 );

      //SATIR 2 -> 4, 5, 6, x
      output_high( SATIR_2 );
      // 4
      if( input( SUTUN_1 ) )
      {
         if( inp == 0 && out == 0) Komut_Gonder( '\f' );  
         inp *=10;inp += 4; Komut_Gonder( '4' ); delay_ms(250);
      }
      else if( input( SUTUN_2 ) )// 5
      {
         if( inp == 0 && out == 0) Komut_Gonder( '\f' );
         inp *=10;inp += 5; Komut_Gonder( '5' );delay_ms(250);
      }
      else if( input( SUTUN_3 ) )  // 6
      {
         if( inp == 0 && out == 0) Komut_Gonder( '\f' );   
         inp *=10;inp += 6;Komut_Gonder( '6' );delay_ms(250);
      }
      
      else if( input( SUTUN_4 ) )// x
      {
         islem = '*';
         if ( out == 0 ){out = inp; inp = 0;}
         Komut_Gonder( '*' );delay_ms(250);
      }
      output_low( SATIR_2 );

      //SATIR 3 -> 1, 2, 3, -
      output_high( SATIR_3 );
      if( input( SUTUN_1 ) )// 1
      {
         if( inp == 0 && out == 0)Komut_Gonder( '\f' );   
         inp *=10;inp += 1;Komut_Gonder( '1' );delay_ms(250);
      }
      else if( input( SUTUN_2 ) ) // 2
      {
         if( inp == 0 && out == 0) Komut_Gonder( '\f' );  
         inp *=10;inp += 2;Komut_Gonder( '2' );delay_ms(250);
      }
      else if( input( SUTUN_3 ) ) // 3
      {
         if( inp == 0 && out == 0)Komut_Gonder( '\f' );  
         inp *=10;inp += 3; Komut_Gonder( '3' );delay_ms(250);
      }
      else if( input( SUTUN_4 ) )// -
      {
         islem = '-';
         if ( out == 0 ){out = inp;inp = 0;}
         Komut_Gonder( '-' );delay_ms(250);
      }
      output_low( SATIR_3 );

      //SATIR 4 -> ON/C, 0, =, +
      output_high( SATIR_4 );
      if( input( SUTUN_1 ) )// ON/C
      { // Input ve Output degerlerini sifirladim
         inp = 0;out = 0;
         Komut_Gonder( '\f' );Komut_Gonder( '0' );delay_ms(250);
      }
      if( input( SUTUN_2 ) )// 0
      {
         if( inp == 0 && out == 0)Komut_Gonder( '\f' );   
         inp *=10;Komut_Gonder( '0' );delay_ms(250);
      }
      else if( input( SUTUN_3 ) )// =
      {
         Komut_Gonder( '\f' );
         Hesap();delay_ms(250);
      }
      else if( input( SUTUN_4 ) )// +
      {
         islem = '+';
         if ( out == 0 ){out = inp;inp = 0;}
         inp = 0;Komut_Gonder( '+' );delay_ms(250);
      }
      output_low( SATIR_4 );
}

void Hesap()
{
   switch(islem)
   {
      case '+': out += inp; break;
      case '-': out -= inp; break;
      case '*': out *= inp; break;
      case '/': out /= inp; break;
      default: break;
   }
   inp = 0;
   int sonuc = 0;
   int basamak = 1;
   // Ilk olarak gelen sayinin kac basamakli oldugunu buldum
   while( basamak * 10 <= out)
      basamak *= 10;
   //Tek tek basamak dusecegim icin gecici double degiskenini olusturdum
   double temp = out;
   // En soldan saga dogru rakam rakam almaya basladim
   while( basamak >= 1 )
   {
      sonuc = temp / basamak;
      temp -= basamak * sonuc;
      // Int sayiyi char olarak gondermek icin '0' ekledim
      Komut_Gonder( sonuc + '0' );
      
      basamak /= 10;
   }
   // Eger bolme islemi ise
   if ( islem == '/' )
   {
      // Virgulu gonderdim
      Komut_Gonder( ',' );
      // Virgulden sonra 2 basamak almak icin 100 ile carptim
      temp *= 100;
      // 10'a bolerek ilk rakami aldim
      sonuc = temp / 10;
      temp -= 10 * sonuc;
      Komut_Gonder( sonuc + '0' );
      // ikinci rakam da zaten 1'e bolumden  kalan oluyor
      sonuc = temp / 1;
      Komut_Gonder( sonuc + '0' );
   }
}
// SPI haberlesmesi
void Komut_Gonder(char command)
{ 
      // Kesme haberinin gonderilmesi
      output_low( pin_e0 );
      // Komutun gonderilmesi
      spi_write(command);
      delay_us(10);
      // Kesmenin bitirilmesi
      output_high( pin_e0 );
      delay_ms( 10 );
}

#int_ext
void rb0_kesmesi()
{
   // Calisiyorsa calismayacak, calismiyorsa calisacak 
   start = !start;
   // Output ve inputu 0ladim
   out = 0;
   inp = 0;
   // Baslangicta tekrardan 0 yazmasi icin
   baslangic = 1;
}
